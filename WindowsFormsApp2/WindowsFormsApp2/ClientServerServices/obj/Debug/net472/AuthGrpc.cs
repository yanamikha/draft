// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Auth.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Auth {
  public static partial class AuthorizationService
  {
    static readonly string __ServiceName = "auth.AuthorizationService";

    static readonly grpc::Marshaller<global::Auth.User> __Marshaller_auth_User = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Auth.User.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Authenticity.Token> __Marshaller_authenticity_Token = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Authenticity.Token.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::Auth.User, global::Authenticity.Token> __Method_LogIn = new grpc::Method<global::Auth.User, global::Authenticity.Token>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LogIn",
        __Marshaller_auth_User,
        __Marshaller_authenticity_Token);

    static readonly grpc::Method<global::Authenticity.Token, global::Google.Protobuf.WellKnownTypes.Empty> __Method_LogOut = new grpc::Method<global::Authenticity.Token, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LogOut",
        __Marshaller_authenticity_Token,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Auth.AuthReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AuthorizationService</summary>
    [grpc::BindServiceMethod(typeof(AuthorizationService), "BindService")]
    public abstract partial class AuthorizationServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Authenticity.Token> LogIn(global::Auth.User request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> LogOut(global::Authenticity.Token request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AuthorizationService</summary>
    public partial class AuthorizationServiceClient : grpc::ClientBase<AuthorizationServiceClient>
    {
      /// <summary>Creates a new client for AuthorizationService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public AuthorizationServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AuthorizationService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public AuthorizationServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected AuthorizationServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected AuthorizationServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Authenticity.Token LogIn(global::Auth.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LogIn(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Authenticity.Token LogIn(global::Auth.User request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LogIn, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Authenticity.Token> LogInAsync(global::Auth.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LogInAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Authenticity.Token> LogInAsync(global::Auth.User request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LogIn, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty LogOut(global::Authenticity.Token request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LogOut(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty LogOut(global::Authenticity.Token request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LogOut, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> LogOutAsync(global::Authenticity.Token request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LogOutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> LogOutAsync(global::Authenticity.Token request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LogOut, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override AuthorizationServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AuthorizationServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(AuthorizationServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_LogIn, serviceImpl.LogIn)
          .AddMethod(__Method_LogOut, serviceImpl.LogOut).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AuthorizationServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_LogIn, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Auth.User, global::Authenticity.Token>(serviceImpl.LogIn));
      serviceBinder.AddMethod(__Method_LogOut, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Authenticity.Token, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.LogOut));
    }

  }
}
#endregion
